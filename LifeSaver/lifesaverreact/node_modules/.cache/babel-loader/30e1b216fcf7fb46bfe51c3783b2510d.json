{"ast":null,"code":"var _jsxFileName = \"F:\\\\GitHub\\\\Enterprise-Application-Development-Project\\\\LifeSaver\\\\lifesaverreact\\\\src\\\\LoginForm.js\";\nimport React from 'react';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStorage from './stored/UserStorage';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n\n    if (val.length > 12) {\n      return;\n    }\n\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    });\n  }\n\n  async userLogin() {\n    if (!this.state.username) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch('/login', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application.json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStorage.isLoggedIn = true;\n        UserStorage.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Login In\", React.createElement(InputField, {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: this.state.username ? this.state.username : '',\n      onChange: val => this.setInputValue('username', val),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(InputField, {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password ? this.state.password : '',\n      onChange: val => this.setInputValue('password', val),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["F:/GitHub/Enterprise-Application-Development-Project/LifeSaver/lifesaverreact/src/LoginForm.js"],"names":["React","InputField","SubmitButton","UserStorage","LoginForm","Component","constructor","props","state","username","password","buttonDisabled","setInputValue","property","val","trim","length","setState","resetForm","userLogin","res","fetch","method","headers","body","JSON","stringify","result","json","success","isLoggedIn","alert","msg","e","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStorage from './stored/UserStorage';\r\n\r\nclass LoginForm extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 12) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    async userLogin() {\r\n\r\n        if (!this.state.username) {\r\n            return;\r\n        }\r\n        if (!this.state.password) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n\r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application.json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                UserStorage.isLoggedIn = true;\r\n                UserStorage.username = result.username;\r\n            }\r\n\r\n            else if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            }\r\n        }\r\n\r\n        catch(e){\r\n            console.log(e);\r\n            this.resetForm();\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"login\">\r\n\r\n                Login In \r\n                <InputField\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    value={this.state.username ? this.state.username : ''}\r\n                    onChange={ (val) => this.setInputValue('username', val) }\r\n                />\r\n\r\n                <InputField\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={this.state.password ? this.state.password : ''}\r\n                    onChange={ (val) => this.setInputValue('password', val) }\r\n                />\r\n\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}